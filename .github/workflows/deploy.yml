name: 🚀 Deploy to GitHub Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: 📂 Checkout repository
      uses: actions/checkout@v4
      
    - name: 🟢 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: 🎥 Verify config.js exists with video metadata
      run: |
        echo "🔍 Checking config.js..."
        if [ -f "config.js" ]; then
          echo "✅ Found config.js, checking for video data..."
          if grep -q "videoConfig" config.js; then
            echo "✅ Video configuration found in config.js"
            # Show first video title to verify content
            grep -A 2 "title" config.js | head -3
          else
            echo "⚠️ No video configuration found, generating from URLs..."
            if [ -f "urls.txt" ]; then
              node generate-video-config.js
            fi
          fi
        else
          echo "❌ config.js not found, generating from URLs..."
          if [ -f "urls.txt" ]; then
            node generate-video-config.js
          else
            echo "❌ No urls.txt found either, deployment may fail"
          fi
        fi
        
    - name: 🔧 Setup Pages
      uses: actions/configure-pages@v4
        
    - name: 📦 Build with Jekyll
      uses: actions/jekyll-build-pages@v1
      with:
        source: ./
        destination: ./_site
          
    - name: 📤 Upload artifact
      uses: actions/upload-pages-artifact@v3

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build-and-deploy
    steps:
      - name: 🚀 Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
